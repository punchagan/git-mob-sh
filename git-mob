#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

COAUTHORS=~/.git-coauthors
TEMPLATE=.git/gitmessage
TMP_COAUTHORS=/tmp/git-coauthors

list () {
    jq -r '.coauthors | to_entries | .[] | "\(.key): \(.value.name) <\(.value.email)>"' "${COAUTHORS}"
}

choose_co_authors () {
    current_email=$(git config user.email)
    for each in $@; do
        if [ $current_email = $(jq -r ".coauthors.${each}.email" "${COAUTHORS}") ]; then
            continue
        fi
        jq -r ".coauthors.${each}" "${COAUTHORS}" | jq -r '"Co-authored-by: \(.name) <\(.email)>"'
    done
}

create_template () {
    touch "${TEMPLATE}"
    cat <<EOF > ${TEMPLATE}


$(choose_co_authors $@)
EOF
}

set_current_author () {
    git config --local user.email $(jq -r ".coauthors.${1}.email" "${COAUTHORS}")
    git config --local user.name $(jq -r ".coauthors.${1}.name" "${COAUTHORS}")
}

unset_current_author () {
    git config --local --unset user.email
    git config --local --unset user.name
}

enable () {
    create_template $@
    git config --local commit.template "${TEMPLATE}"
}

solo () {
    rm "${TEMPLATE}"
    git config --local --unset commit.template
}

add_co_author () {
    id=$1
    name=$2
    email=$3
    echo "{\"coauthors\": {\"$id\": {\"name\": \"$name\", \"email\": \"$email\"}}}" > /tmp/git-mob-$id-author.json
    jq --argfile author /tmp/git-mob-$id-author.json '. * $author' "${COAUTHORS}" > "${TMP_COAUTHORS}"
    mv_tmp_coauthors
}

delete_co_author () {
    PATTERN="del(.coauthors.${1})"
    jq $PATTERN "${COAUTHORS}" > "${TMP_COAUTHORS}"
    mv_tmp_coauthors
}

mv_tmp_coauthors () {
    mv "${TMP_COAUTHORS}" "${COAUTHORS}"
}

show () {
    echo "Author: $(git config user.name) <$(git config user.email)>"
    if [ -f "${TEMPLATE}" ]; then
        sed '/^[[:space:]]*$/d' "${TEMPLATE}"
    fi
}


# Argument parsing

if [ 0 -eq $# ]; then
    show
    exit 0;
fi

subcommand=$1
case "$subcommand" in
    "list")
        list;;
    "show")
        show;;
    "add-co-author")
        shift;
        add_co_author $@;;
    "delete-co-author")
        shift;
        delete_co_author $@;;
    "solo")
        unset_current_author;
        solo;;
    *)
        if [ "${subcommand}" = "-o" ]; then
            set_current_author $2;
            shift;
            shift;
        else
            unset_current_author;
        fi
        enable $@;;
esac
