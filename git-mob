#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

COAUTHORS=~/.git-coauthors
TEMPLATE=~/.gitmessage
TMP_COAUTHORS=/tmp/git-coauthors

list () {
    jq -r '.coauthors | to_entries | .[] | "\(.key): \(.value.name) <\(.value.email)>"' "${COAUTHORS}"
}

choose_co_authors () {
    for each in $@; do
        jq -r '.coauthors' "${COAUTHORS}" | jq -r ".${each}"| jq -r '"Co-authored-by: \(.name) <\(.email)>"'
    done
}

create_template () {
    touch "${TEMPLATE}"
    cat <<EOF > ${TEMPLATE}


$(choose_co_authors $@)
EOF
}

enable () {
    create_template $@
    git config --local commit.template "${TEMPLATE}"
}

solo () {
    rm "${TEMPLATE}"
    git config --local --unset commit.template
}

add_co_author () {
    id=$1
    name=$2
    email=$3
    echo "{\"coauthors\": {\"$id\": {\"name\": \"$name\", \"email\": \"$email\"}}}" > /tmp/git-mob-$1-author.json
    jq --argfile author /tmp/git-mob-pc-author.json '. * $author' ~/.git-coauthors > "${TMP_COAUTHORS}"
    mv_tmp_coauthors
}

del_co_author () {
    PATTERN="del(.coauthors.${1})"
    jq $PATTERN "${COAUTHORS}" > "${TMP_COAUTHORS}"
    mv_tmp_coauthors
}

mv_tmp_coauthors () {
    mv "${TMP_COAUTHORS}" "${COAUTHORS}"
}

show () {
    echo "Author: $(git config user.name) <$(git config user.email)>"
    sed '/^[[:space:]]*$/d' "${TEMPLATE}"
}

if [ 0 -eq $# ]; then
    show
fi
